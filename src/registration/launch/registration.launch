<launch>

    <node pkg="registration" type="robot_registration" name="registration_node_node" output="screen">
        <rosparam command="load" file="$(find registration)/config/super4pcs.yaml"/>
        <rosparam command="load" file="$(find registration)/config/fpfh.yaml"/>
        <rosparam command="load" file="$(find registration)/config/icp.yaml"/>
        <rosparam command="load" file="$(find registration)/config/process.yaml"/>
    </node> 

    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find registration)/rviz/registration.rviz" required="true"/>

    <!-- Robot Render -->
    <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
    <include file="$(find abb_irb1200_7_70_moveit_config)/launch/planning_context.launch">
      <arg name="load_robot_description" value="true"/>
    </include>

    <!-- If needed, broadcast static tf for robot root -->
    <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 map base_link 1" />

    <!-- send fake joint values -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <rosparam param="source_list">["/target_planner/fake_controller_joint_states"]</rosparam>
    </node>

    <!-- Start robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

</launch>